name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        
    steps:       
    - uses: actions/checkout@v4

    - name: Compile native versions
      run: |
        make --debug
        
    - name: Get short SHA
      id: slug
      run: |
        echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT

    - name: Create tar archive (keep executable bit)
      run: tar -zcvf ps2client-${{ steps.slug.outputs.sha8 }}-${{matrix.os}}.tar.gz bin
        
    - uses: actions/upload-artifact@v4
      with:
        name: ps2client-${{ steps.slug.outputs.sha8 }}-${{matrix.os}}
        path: |
          *tar.gz
          
  build-win:
    runs-on: ubuntu-latest
    container: dockcross/windows-static-x86:latest
    
    steps:       
    - uses: actions/checkout@v4

    - name: Compile windows version with cross-compilator
      run: |
        make -f Makefile.mingw32 --trace
        
    - name: Get short SHA
      id: slug
      run: echo "::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)"

    - name: Create tar archive
      run: tar -zcvf ps2client-${{ steps.slug.outputs.sha8 }}-windows-latest.tar.gz bin
        
    - uses: actions/upload-artifact@v4
      with:
        name: ps2client-${{ steps.slug.outputs.sha8 }}-windows-latest
        path: |
          *tar.gz
          
  release:
    needs: [build, build-win]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v4
    
    - name: Get short SHA
      id: slug
      run: |
        echo "sha8=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_OUTPUT
      
    - name: Download Mac artifact
      uses: actions/download-artifact@v4
      with:
        name: ps2client-${{ steps.slug.outputs.sha8 }}-macos-latest

    - name: Download Ubuntu artifact
      uses: actions/download-artifact@v4
      with:
        name: ps2client-${{ steps.slug.outputs.sha8 }}-ubuntu-latest

    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: ps2client-${{ steps.slug.outputs.sha8 }}-windows-latest

    - name: Create pre-release
      if: github.ref == 'refs/heads/master'
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        automatic_release_tag: "latest"
        title: "Development build"
        files: |
          *tar.gz
          
    - name: Create Tagged Release Draft
      if: startsWith(github.ref, 'refs/tags/v')
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        draft: true
        files: |
          *tar.gz
